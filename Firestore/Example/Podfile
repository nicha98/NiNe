# Uncomment the next two lines for pre-release testing on internal repo
#source 'sso://cpdc-internal/firebase'
#source 'https://github.com/CocoaPods/Specs.git'

# Uncomment the next two lines for pre-release testing on public repo
#source 'https://github.com/Firebase/SpecsStaging.git'
#source 'https://github.com/CocoaPods/Specs.git'

use_frameworks!


# Appends the given +paths+ to the HEADER_SEARCH_PATHS setting for the given
# target in all build configurations.
def append_header_search_path(target, *paths)
  setting = 'HEADER_SEARCH_PATHS'
  target.build_configurations.each do |config|
    config.build_settings[setting] ||= '$(inherited)'
    paths.each do |path|
      config.build_settings[setting] << ' '
      config.build_settings[setting] << path
    end
  end
end


post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Building the FirebaseFirestore framework proper seems fragile in Xcode:
    # changes to public headers seem to cause weird cascading failures in the
    # IDE's pre-build error detection. The issue seems to be that the Pod's
    # public headers are found by clang at build time through a copy headers
    # phase, but the interactive editor won't have those in place, especially
    # when the build is broken by current edits.
    if target.name =~ /^FirebaseFirestore/
      append_header_search_path(target, '$(PODS_ROOT)/../../../Firestore/Source/Public')
    end
  end
end

target 'Firestore_Example_iOS' do
  platform :ios, '8.0'

  # The next line is the forcing function for the Firebase pod. The Firebase
  # version's subspecs should depend on the component versions in their
  # corresponding podspec's.
  pod 'Firebase/CoreOnly', '6.2.0'

  pod 'FirebaseAuth', :path => '../../'
  pod 'FirebaseAuthInterop', :path => '../../'
  pod 'FirebaseCore', :path => '../../'
  pod 'GoogleUtilities', :path => '../../'
  pod 'FirebaseFirestore', :path => '../../'

  target 'Firestore_Tests_iOS' do
    inherit! :search_paths

    pod 'GoogleBenchmark', :podspec => 'GoogleBenchmark.podspec'
    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'
    pod 'ProtobufCpp', :podspec => 'ProtobufCpp.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end

  target 'Firestore_Benchmarks_iOS' do
    inherit! :search_paths

    pod 'GoogleBenchmark', :podspec => 'GoogleBenchmark.podspec'
  end

  target 'Firestore_IntegrationTests_iOS' do
    inherit! :search_paths

    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end

  target 'Firestore_SwiftTests_iOS' do
    pod 'FirebaseFirestoreSwift', :path => '../../'
  end

  target 'Firestore_FuzzTests_iOS' do
    inherit! :search_paths
    platform :ios, '9.0'

    pod 'LibFuzzer', :podspec => 'LibFuzzer.podspec'
    pod '!ProtoCompiler'
  end
end

target 'Firestore_Example_macOS' do
  platform :osx, '10.11'

  pod 'FirebaseAuth', :path => '../../'
  pod 'FirebaseCore', :path => '../../'
  pod 'FirebaseFirestore', :path => '../../'

  target 'Firestore_Tests_macOS' do
    inherit! :search_paths

    pod 'GoogleBenchmark', :podspec => 'GoogleBenchmark.podspec'
    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'
    pod 'ProtobufCpp', :podspec => 'ProtobufCpp.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end

  target 'Firestore_IntegrationTests_macOS' do
    inherit! :search_paths

    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end
end

target 'Firestore_Example_tvOS' do
  platform :tvos, '10.0'

  pod 'FirebaseAuth', :path => '../../'
  pod 'FirebaseCore', :path => '../../'
  pod 'FirebaseFirestore', :path => '../../'

  target 'Firestore_Tests_tvOS' do
    inherit! :search_paths

    pod 'GoogleBenchmark', :podspec => 'GoogleBenchmark.podspec'
    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'
    pod 'ProtobufCpp', :podspec => 'ProtobufCpp.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end

  target 'Firestore_IntegrationTests_tvOS' do
    inherit! :search_paths

    pod 'GoogleTest', :podspec => 'GoogleTest.podspec'

    pod 'OCMock'
    pod 'leveldb-library'
  end
end
