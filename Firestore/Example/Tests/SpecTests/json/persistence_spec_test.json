{
  "Local mutations are persisted and re-sent": {
    "describeName": "Persistence:",
    "itName": "Local mutations are persisted and re-sent",
    "tags": [
      "durable-persistence"
    ],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userSet": [
          "collection/key1",
          {
            "foo": "bar"
          }
        ]
      },
      {
        "userSet": [
          "collection/key2",
          {
            "baz": "quu"
          }
        ]
      },
      {
        "restart": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": [],
          "numOutstandingWrites": 2
        }
      },
      {
        "writeAck": {
          "version": 1
        }
      },
      {
        "writeAck": {
          "version": 2
        },
        "stateExpect": {
          "numOutstandingWrites": 0
        }
      }
    ]
  },
  "Persisted local mutations are visible to listeners": {
    "describeName": "Persistence:",
    "itName": "Persisted local mutations are visible to listeners",
    "tags": [
      "durable-persistence"
    ],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userSet": [
          "collection/key1",
          {
            "foo": "bar"
          }
        ]
      },
      {
        "userSet": [
          "collection/key2",
          {
            "baz": "quu"
          }
        ]
      },
      {
        "restart": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": []
        }
      },
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": ""
            }
          }
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key1",
                0,
                {
                  "foo": "bar"
                },
                "local"
              ],
              [
                "collection/key2",
                0,
                {
                  "baz": "quu"
                },
                "local"
              ]
            ],
            "errorCode": 0,
            "fromCache": true,
            "hasPendingWrites": true
          }
        ]
      }
    ]
  },
  "Remote documents are persisted": {
    "describeName": "Persistence:",
    "itName": "Remote documents are persisted",
    "tags": [
      "durable-persistence"
    ],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": ""
            }
          }
        }
      },
      {
        "watchAck": [
          2
        ]
      },
      {
        "watchEntity": {
          "docs": [
            [
              "collection/key",
              1000,
              {
                "foo": "bar"
              }
            ]
          ],
          "targets": [
            2
          ]
        }
      },
      {
        "watchCurrent": [
          [
            2
          ],
          "resume-token-1000"
        ]
      },
      {
        "watchSnapshot": {
          "version": 1000
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key",
                1000,
                {
                  "foo": "bar"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": false
          }
        ]
      },
      {
        "restart": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": []
        }
      },
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": "resume-token-1000"
            }
          }
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key",
                1000,
                {
                  "foo": "bar"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": true,
            "hasPendingWrites": false
          }
        ]
      }
    ]
  },
  "Remote documents from watch are not GC'd": {
    "describeName": "Persistence:",
    "itName": "Remote documents from watch are not GC'd",
    "tags": [],
    "config": {
      "useGarbageCollection": false,
      "numClients": 1
    },
    "steps": [
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": ""
            }
          }
        }
      },
      {
        "watchAck": [
          2
        ]
      },
      {
        "watchEntity": {
          "docs": [
            [
              "collection/key",
              1000,
              {
                "foo": "bar"
              }
            ]
          ],
          "targets": [
            2
          ]
        }
      },
      {
        "watchCurrent": [
          [
            2
          ],
          "resume-token-1000"
        ]
      },
      {
        "watchSnapshot": {
          "version": 1000
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key",
                1000,
                {
                  "foo": "bar"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": false
          }
        ]
      },
      {
        "userUnlisten": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {}
        }
      },
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": "resume-token-1000"
            }
          }
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key",
                1000,
                {
                  "foo": "bar"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": true,
            "hasPendingWrites": false
          }
        ]
      }
    ]
  },
  "Remote documents from user sets are not GC'd": {
    "describeName": "Persistence:",
    "itName": "Remote documents from user sets are not GC'd",
    "tags": [],
    "config": {
      "useGarbageCollection": false,
      "numClients": 1
    },
    "steps": [
      {
        "userSet": [
          "collection/key",
          {
            "foo": "bar"
          }
        ]
      },
      {
        "writeAck": {
          "version": 1000
        },
        "stateExpect": {
          "userCallbacks": {
            "acknowledgedDocs": [
              "collection/key"
            ],
            "rejectedDocs": []
          }
        }
      },
      {
        "userListen": [
          2,
          {
            "path": "collection",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "collection",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": ""
            }
          }
        },
        "expect": [
          {
            "query": {
              "path": "collection",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "collection/key",
                0,
                {
                  "foo": "bar"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": true,
            "hasPendingWrites": false
          }
        ]
      }
    ]
  },
  "Mutation Queue is persisted across uid switches": {
    "describeName": "Persistence:",
    "itName": "Mutation Queue is persisted across uid switches",
    "tags": [],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userSet": [
          "users/anon",
          {
            "uid": "anon"
          }
        ]
      },
      {
        "changeUser": "user1",
        "stateExpect": {
          "numOutstandingWrites": 0
        }
      },
      {
        "userSet": [
          "users/user1",
          {
            "uid": "user1"
          }
        ]
      },
      {
        "userSet": [
          "users/user1",
          {
            "uid": "user1",
            "extra": true
          }
        ]
      },
      {
        "changeUser": null,
        "stateExpect": {
          "numOutstandingWrites": 1
        }
      },
      {
        "writeAck": {
          "version": 1000
        },
        "stateExpect": {
          "userCallbacks": {
            "acknowledgedDocs": [
              "users/anon"
            ],
            "rejectedDocs": []
          }
        }
      },
      {
        "changeUser": "user1",
        "stateExpect": {
          "numOutstandingWrites": 2
        }
      },
      {
        "writeAck": {
          "version": 2000
        },
        "stateExpect": {
          "userCallbacks": {
            "acknowledgedDocs": [
              "users/user1"
            ],
            "rejectedDocs": []
          }
        }
      },
      {
        "writeAck": {
          "version": 3000
        },
        "stateExpect": {
          "userCallbacks": {
            "acknowledgedDocs": [
              "users/user1"
            ],
            "rejectedDocs": []
          }
        }
      }
    ]
  },
  "Mutation Queue is persisted across uid switches (with restarts)": {
    "describeName": "Persistence:",
    "itName": "Mutation Queue is persisted across uid switches (with restarts)",
    "tags": [
      "durable-persistence"
    ],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userSet": [
          "users/anon",
          {
            "uid": "anon"
          }
        ]
      },
      {
        "changeUser": "user1",
        "stateExpect": {
          "numOutstandingWrites": 0
        }
      },
      {
        "userSet": [
          "users/user1",
          {
            "uid": "user1"
          }
        ]
      },
      {
        "userSet": [
          "users/user1",
          {
            "uid": "user1",
            "extra": true
          }
        ]
      },
      {
        "changeUser": null
      },
      {
        "restart": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": [],
          "numOutstandingWrites": 1
        }
      },
      {
        "writeAck": {
          "version": 1000
        }
      },
      {
        "changeUser": "user1"
      },
      {
        "restart": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": [],
          "numOutstandingWrites": 2
        }
      },
      {
        "writeAck": {
          "version": 2000
        }
      },
      {
        "writeAck": {
          "version": 3000
        }
      }
    ]
  },
  "Visible mutations reflect uid switches": {
    "describeName": "Persistence:",
    "itName": "Visible mutations reflect uid switches",
    "tags": [],
    "config": {
      "useGarbageCollection": true,
      "numClients": 1
    },
    "steps": [
      {
        "userListen": [
          2,
          {
            "path": "users",
            "filters": [],
            "orderBys": []
          }
        ],
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "users",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": ""
            }
          }
        }
      },
      {
        "watchAck": [
          2
        ]
      },
      {
        "watchEntity": {
          "docs": [
            [
              "users/existing",
              0,
              {
                "uid": "existing"
              }
            ]
          ],
          "targets": [
            2
          ]
        }
      },
      {
        "watchCurrent": [
          [
            2
          ],
          "resume-token-500"
        ]
      },
      {
        "watchSnapshot": {
          "version": 500
        },
        "expect": [
          {
            "query": {
              "path": "users",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "users/existing",
                0,
                {
                  "uid": "existing"
                }
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": false
          }
        ]
      },
      {
        "userSet": [
          "users/anon",
          {
            "uid": "anon"
          }
        ],
        "expect": [
          {
            "query": {
              "path": "users",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "users/anon",
                0,
                {
                  "uid": "anon"
                },
                "local"
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": true
          }
        ]
      },
      {
        "changeUser": "user1",
        "stateExpect": {
          "activeTargets": {
            "2": {
              "query": {
                "path": "users",
                "filters": [],
                "orderBys": []
              },
              "resumeToken": "resume-token-500"
            }
          }
        },
        "expect": [
          {
            "query": {
              "path": "users",
              "filters": [],
              "orderBys": []
            },
            "removed": [
              [
                "users/anon",
                0,
                {
                  "uid": "anon"
                },
                "local"
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": false
          }
        ]
      },
      {
        "userSet": [
          "users/user1",
          {
            "uid": "user1"
          }
        ],
        "expect": [
          {
            "query": {
              "path": "users",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "users/user1",
                0,
                {
                  "uid": "user1"
                },
                "local"
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": true
          }
        ]
      },
      {
        "changeUser": null,
        "expect": [
          {
            "query": {
              "path": "users",
              "filters": [],
              "orderBys": []
            },
            "added": [
              [
                "users/anon",
                0,
                {
                  "uid": "anon"
                },
                "local"
              ]
            ],
            "removed": [
              [
                "users/user1",
                0,
                {
                  "uid": "user1"
                },
                "local"
              ]
            ],
            "errorCode": 0,
            "fromCache": false,
            "hasPendingWrites": true
          }
        ]
      }
    ]
  },
  "Detects all active clients": {
    "describeName": "Persistence:",
    "itName": "Detects all active clients",
    "tags": [
      "multi-client"
    ],
    "config": {
      "useGarbageCollection": false,
      "numClients": 2
    },
    "steps": [
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "applyClientState": {
          "visibility": "hidden"
        },
        "stateExpect": {
          "numActiveClients": 1
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "applyClientState": {
          "visibility": "visible"
        },
        "stateExpect": {
          "numActiveClients": 2
        },
        "clientIndex": 1
      }
    ]
  },
  "Single tab acquires primary lease": {
    "describeName": "Persistence:",
    "itName": "Single tab acquires primary lease",
    "tags": [
      "multi-client"
    ],
    "config": {
      "useGarbageCollection": false,
      "numClients": 2
    },
    "steps": [
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "applyClientState": {
          "visibility": "hidden"
        },
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "applyClientState": {
          "visibility": "hidden"
        },
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "shutdown": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": []
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 1
      }
    ]
  },
  "Foreground tab acquires primary lease": {
    "describeName": "Persistence:",
    "itName": "Foreground tab acquires primary lease",
    "tags": [
      "multi-client"
    ],
    "config": {
      "useGarbageCollection": false,
      "numClients": 3
    },
    "steps": [
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "applyClientState": {
          "visibility": "hidden"
        },
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "applyClientState": {
          "visibility": "hidden"
        },
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 2
      },
      {
        "applyClientState": {
          "visibility": "visible"
        },
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 2
      },
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "shutdown": true,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": []
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 2
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 2
      }
    ]
  },
  "Primary lease bound to network state": {
    "describeName": "Persistence:",
    "itName": "Primary lease bound to network state",
    "tags": [
      "multi-client"
    ],
    "config": {
      "useGarbageCollection": false,
      "numClients": 2
    },
    "steps": [
      {
        "drainQueue": true,
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 0
      },
      {
        "enableNetwork": false,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": [],
          "isPrimary": true
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 1
      },
      {
        "enableNetwork": false,
        "stateExpect": {
          "activeTargets": {},
          "limboDocs": [],
          "isPrimary": true
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "enableNetwork": true,
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 0
      },
      {
        "drainQueue": true,
        "clientIndex": 1
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": false
        },
        "clientIndex": 1
      },
      {
        "drainQueue": true,
        "clientIndex": 0
      },
      {
        "runTimer": "client_metadata_refresh",
        "stateExpect": {
          "isPrimary": true
        },
        "clientIndex": 0
      }
    ]
  }
}
