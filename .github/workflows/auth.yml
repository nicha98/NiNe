name: auth

on:
  pull_request:
    paths:
    - 'FirebaseAuth**'
    - 'Interop/Auth/Public/*.h'
    - '.github/workflows/auth.yml'
    - 'Gemfile'
  schedule:
    # Run every day at 3am (PST) - cron uses UTC times
    # This is set to 3 hours after zip workflow so zip testing can run after.
    - cron:  '0 11 * * *'

jobs:

  pod-lib-lint:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'

    runs-on: macOS-latest

    strategy:
      matrix:
        target: [ios, tvos, macos]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Build and test
      run: |
        scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseAuth.podspec --platforms=${{ matrix.target }}

  integration-tests:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'

    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Prereqs
      run: scripts/install_prereqs.sh Auth iOS
    - name: Install Secrets
      run: |
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthCredentials.h.gpg \
          FirebaseAuth/Tests/Sample/ApiTests/AuthCredentials.h "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/Application.plist.gpg \
          FirebaseAuth/Tests/Sample/Sample/Application.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/AuthCredentials.h.gpg \
          FirebaseAuth/Tests/Sample/Sample/AuthCredentials.h "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/GoogleService-Info.plist.gpg \
          FirebaseAuth/Tests/Sample/Sample/GoogleService-Info.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/GoogleService-Info_multi.plist.gpg \
          FirebaseAuth/Tests/Sample/Sample/GoogleService-Info_multi.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/Sample.entitlements.gpg \
          FirebaseAuth/Tests/Sample/Sample/Sample.entitlements "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/Credentials.swift.gpg \
          FirebaseAuth/Tests/Sample/SwiftApiTests/Credentials.swift "$plist_secret"

    - name: BuildAndTest # can be replaced with pod lib lint with CocoaPods 1.10
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/build.sh Auth iOS)

  catalyst:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'

    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Setup project and Build for Catalyst
      # Only build the unit tests on Catalyst
      run: scripts/test_catalyst.sh FirebaseAuth build FirebaseAuth-Unit-unit

  quickstart_framework:
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      FRAMEWORK_ZIP: "Firebase-actions-dir.zip"
      SDK: "Authentication"
    runs-on: macOS-latest
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository != 'FirebasePrivate/firebase-ios-sdk'
    steps:
    - uses: actions/checkout@v2
    - name: Pull zip from GCS
      run: scripts/pull_zip_gcloud.sh "$plist_secret" "$FRAMEWORK_ZIP" "${HOME}/ios_frameworks"
    - name: Setup Swift Quickstart
      run: SAMPLE="$SDK" TARGET="${SDK}Example" NON_FIREBASE_SDKS="FBSDKLoginKit FBSDKCoreKit" scripts/setup_quickstart_framework.sh \
                                               "${HOME}"/ios_frameworks/Firebase/NonFirebaseSDKs/* \
                                               "${HOME}"/ios_frameworks/Firebase/FirebaseDynamicLinks/* \
                                               "${HOME}"/ios_frameworks/Firebase/GoogleSignIn/* \
                                               "${HOME}"/ios_frameworks/Firebase/FirebaseAuth/* \
                                               "${HOME}"/ios_frameworks/Firebase/FirebaseAnalytics/*
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-auth.plist.gpg \
        quickstart-ios/authentication/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
        quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test Swift Quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_framework.sh "${SDK}")
    - name: Remove data before upload
      if: ${{ failure() }}
      run: scripts/remove_data.sh "${SDK}"
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts
        path: quickstart-ios/

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'

    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh authentication
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-auth.plist.gpg \
          quickstart-ios/authentication/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Authentication)

  auth-cron-only:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository != 'FirebasePrivate/firebase-ios-sdk'

    runs-on: macos-latest
    strategy:
      matrix:
        target: [ios, tvos --skip-tests, macos --skip-tests] # The macos and tvos tests can hang
        flags: [
          '--use-modular-headers',
          '--use-libraries'
        ]
    needs: pod-lib-lint
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: PodLibLint Auth Cron
      run: |
        scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseAuth.podspec --platforms=${{ matrix.target }} ${{ matrix.flags }}
        scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseAuth.podspec --platforms=${{ matrix.target }} ${{ matrix.flags }}
